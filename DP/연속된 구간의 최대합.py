'''
문제 설명
어떤 수열이 있을 때 연속된 구간의 최대합을 출력하려고 한다.

예를 들어

2 -6 4 5 -2 6 2 -1이라는 수열이 있다면

연속된 구간의 최대 부분합은 15이다. (4+5+ -2 + 6 + 2)

입력
첫째줄에 수열의 원소의 개수 n이 입력된다. (1 <= n <= 100,000)

둘째 줄에 n개의 정수 원소 값이 차례대로 입력된다. (값의 범위: -100 ~ + 100)

출력
연속된 구간의 최대합을 출력한다.

입력 예시
8
2 -6 4 5 -2 6 2 -1

출력 예시
15
'''

# 수열의 원소의 개수 n 입력 받기
n = int(input())
# n 개의 원소의 값 입력 받기
array = []
array.append(map(int, input().split()))
# 앞서 계산된 결과를 저장하기 위한 dp 테이블 생성
d = [0] * 100001
# 다이나믹 프로그램 진행 (바텀업)
d[0] = 0
d[1] = max(array[0], array[1])
for i in range(2, n):
    d[i] = max(d[i-1]+d[i-2]+array[1])
# 계산된 결과 출력
if d[n] == 100001:
    print(-1)
else:
    print(d[n-1])